{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","location","setLocation","weather","setWeather","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","scope","err","catch","e","platforms","userChoice","choiceResult","outcome","useEffect","geolocation","getCurrentPosition","position","coords","latitude","longitude","getWeather","lat","long","a","axios","get","params","lon","appid","process","lang","units","res","data","className","onClick","reload","aria-hidden","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTA2GeA,MAtGf,WAAe,MAEiBC,oBAAS,GAF1B,mBAERC,EAFQ,KAEEC,EAFF,OAGeF,oBAAS,GAHxB,mBAGRG,EAHQ,KAGCC,EAHD,KAOX,kBAAmBC,UACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cAAcC,SAAS,WAAWC,MAAK,SAASC,GACxDC,QAAQC,IAAI,iCAAkCF,EAAaG,UAC1D,SAASC,GACVH,QAAQC,IAAI,6BAA8BE,MACzCC,OAAM,SAASD,GAChBH,QAAQC,IAAIE,SAIhBH,QAAQC,IAAI,+CAGdP,OAAOC,iBAAiB,uBAAuB,SAASU,GAEtDL,QAAQC,IAAII,EAAEC,WACdD,EAAEE,WAAWT,MAAK,SAASU,GACzBR,QAAQC,IAAIO,EAAaC,eAO3BC,qBAAU,WACIjB,UAAUkB,YAClBC,oBAAmB,SAACC,GACtBb,QAAQC,IAAIY,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WACtDC,EAAWJ,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WACrD1B,GAAY,QAEb,IAGH,IAAI2B,EAAU,uCAAG,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,sEACCC,IAAMC,IAAI,kDAAmD,CAC3EC,OAAQ,CACNL,IAAKA,EACLM,IAAKL,EACLM,MAAOC,mCACPC,KAAM,KACNC,MAAO,YAPI,OACXC,EADW,OAUf7B,QAAQC,IAAI4B,EAAIC,MAChBtC,EAAWqC,EAAIC,MAXA,2CAAH,wDAqBd,OAAgB,IAAbzC,EAEC,qBAAK0C,UAAU,oBAAf,SACE,oBAAIA,UAAU,qBAAd,sDAGiB,IAAZxC,EAEP,qBAAKwC,UAAU,oBAAf,SACE,oBAAIA,UAAU,qBAAd,mCAKA,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,gBACf,wBAAQA,UAAU,SAAlB,SACE,gEAGF,uBAAMA,UAAU,OAAhB,UACA,qBAAIA,UAAU,YAAd,UACI,yCAAW,sBAAMA,UAAU,iBAAhB,SAAkCxC,EAAO,QAAY,GAAnB,iBAC7C,6CAAe,uBAAMwC,UAAU,iBAAhB,UAAkCxC,EAAO,KAAP,WAAlC,aACf,sDAAwB,uBAAMwC,UAAU,iBAAhB,UAAkCxC,EAAO,KAAP,KAAlC,aACxB,mDAAqB,uBAAMwC,UAAU,iBAAhB,UAAkCxC,EAAO,KAAP,SAAlC,aACrB,mDAAqB,uBAAMwC,UAAU,iBAAhB,UAAkCxC,EAAO,KAAP,SAAlC,aACrB,4CAAc,uBAAMwC,UAAU,iBAAhB,UAAkCxC,EAAO,KAAP,SAAlC,aACd,gDAAkB,uBAAMwC,UAAU,iBAAhB,UAAkCxC,EAAO,KAAP,SAAlC,aAEpB,wBAAQwC,UAAU,WAAUC,QApCZ,WACxBtC,OAAOL,SAAS4C,UAmCR,uCAEF,wBAAQF,UAAU,SAAlB,SACE,2CAAa,mBAAGA,UAAU,cAAcG,cAAY,SAApD,OAAmE,mBAAGC,KAAK,+BAA+BC,OAAO,SAASC,IAAI,aAA3D,gCChG/EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8c970419.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"../style/App.scss\";\nimport \"../style/_weatherState.scss\";\n\nfunction App() {\n// data\nconst [location, setLocation] = useState(false);\nconst [weather, setWeather] = useState(false);\n  \n//service worker  \n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker.register('./sw.js').then(function(registration) {\n      console.log('Worker registration successful', registration.scope);\n    }, function(err) {\n      console.log('Worker registration failed', err);\n    }).catch(function(err) {\n      console.log(err);\n    });\n  });\n} else {\n  console.log('Service Worker is not supported by browser.');\n}\n  \nwindow.addEventListener(\"beforeinstallprompt\", function(e) {\n  // log the platforms provided as options in an install prompt\n  console.log(e.platforms); // e.g., [\"web\", \"android\", \"windows\"]\n  e.userChoice.then(function(choiceResult) {\n    console.log(choiceResult.outcome); // either \"accepted\" or \"dismissed\"\n  });\n});\n  \n/* HANDLE DATA: */\n\n//get user geolocation\n  useEffect(() => {\n    const geo = navigator.geolocation;\n    geo.getCurrentPosition((position) => {\n      console.log(position.coords.latitude, position.coords.longitude);\n      getWeather(position.coords.latitude, position.coords.longitude);\n      setLocation(true);\n    })\n  }, []);\n\n// get API information\n  let getWeather = async (lat, long) => {\n    let res = await axios.get(\"https://api.openweathermap.org/data/2.5/weather\", {\n      params: {\n        lat: lat,\n        lon: long,\n        appid: process.env.REACT_APP_OPEN_WHEATHER_KEY,\n        lang: 'en',\n        units: 'metric'\n      }\n    });\n    console.log(res.data);\n    setWeather(res.data);\n  }\n\n//reload page\n  const updateWeatherPage = () => {\n    window.location.reload();\n  }\n\n/* RENDER APLICATION */\n \n  if(location === false){\n    return (\n      <div className=\"page page-loading\">\n        <h2 className=\"page-loading_title\">You need habilit the browser location</h2>\n      </div>\n    )\n  } else if (weather === false) {\n    return (\n      <div className=\"page page-loading\">\n        <h2 className=\"page-loading_title\">Load the weather...</h2>\n      </div>\n    )\n  } else {\n    return (\n        <div className=\"page sun\">\n          <div className=\"page-status\"></div>\n          <header className=\"header\">\n            <h1>The weather in your location</h1>\n          </header>\n        \n          <main className=\"main\">\n          <ul className=\"main-list\">\n              <li>Today: <span className=\"main-list_data\">{weather['weather'][0]['description']}</span></li>\n              <li>Feels Like:<span className=\"main-list_data\">{weather['main']['feels_like']}째</span></li>\n              <li>Actual temperature: <span className=\"main-list_data\">{weather['main']['temp']}째</span></li>\n              <li>Max temperature: <span className=\"main-list_data\">{weather['main']['temp_max']}째</span></li>\n              <li>Min Temperature: <span className=\"main-list_data\">{weather['main']['temp_min']}째</span></li>\n              <li>Pressure: <span className=\"main-list_data\">{weather['main']['pressure']} hpa</span></li>\n              <li>Air humidity: <span className=\"main-list_data\">{weather['main']['humidity']}%</span></li>\n            </ul>\n            <button className=\"main-btn\"onClick={updateWeatherPage}>How's the weather now?</button>\n          </main>\n          <footer className=\"footer\">\n            <p>Made with <i className=\"fa fa-heart\" aria-hidden=\"true\"></i> by <a href=\"https://github.com/dand-code\" target=\"_blank\" rel=\"noreferrer\">dand-code</a></p>\n          </footer>\n        </div>\n    );\n  }\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}